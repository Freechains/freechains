#ifndef _CLIENT_SERVER_CEU
#define _CLIENT_SERVER_CEU

#define AWAIT_UNTIL(r,nxt)          \
    if r.next < nxt then            \
        loop do                     \
            await r.ok;             \
            if r.next >= nxt then   \
                break;              \
            end                     \
        end                         \
    end

class MAGIC_VERSION_send with
    var _uv_tcp_t& tcp;
    function (_uv_tcp_t& tcp)=>MAGIC_VERSION_send build;
do
    function (_uv_tcp_t& tcp)=>MAGIC_VERSION_send build do
        this.tcp = &tcp;
    end

    var byte[MAGIC_VERSION_BYTES] version =
        [MAGIC_0, MAGIC_1, VERSION_MAJOR, VERSION_MINOR, VERSION_PATCH];
    do UV_Stream_Write.build(&_UV_STREAM_ALIAS(this.tcp), &version);
end

class MAGIC_VERSION_recv with
    var _uv_tcp_t& tcp;
    function (_uv_tcp_t& tcp)=>MAGIC_VERSION_recv build;
do
    function (_uv_tcp_t& tcp)=>MAGIC_VERSION_recv build do
        this.tcp = &tcp;
    end

    var byte[MAGIC_VERSION_BYTES] version;
    var UV_Stream_Read r = UV_Stream_Read.build(&_UV_STREAM_ALIAS(this.tcp),&version);
    AWAIT_UNTIL(r,MAGIC_VERSION_BYTES);
    if r.next == MAGIC_VERSION_BYTES then
        if version[0] != MAGIC_0        or
           version[1] != MAGIC_1        or
           version[2] != VERSION_MAJOR  or
           version[3] != VERSION_MINOR  or
           version[4] != VERSION_PATCH
        then
            escape _ERR_VERSION;
        end
    else/if r.next > MAGIC_VERSION_BYTES then
        escape _ERR_EXTRA_BYTES;
    else
        _assert(0);
    end

    // version ok
    escape _ERR_NONE;
end

#endif
