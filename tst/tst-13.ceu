/*
12 um fork grande que acumula o passado em um unico bloco
*/

#include "common.ceu"

///////////////////////////////////////////////////////////////////////////////
// 0->1<-2
//  - 0 sends 0.1
//  - 0 sends 0.2
//  - ...     0.8
//  - 2 sends 2.1,2.2,...,2.9
//  - (2.1,...,2.9) -> (0.1,...,0.8) -> ''
///////////////////////////////////////////////////////////////////////////////

input void ANY;

par/or do

///////////////////////////////////////////////////////////////////////////////
// 0
///////////////////////////////////////////////////////////////////////////////

    var App _;
    [[
        dofile 'cfg/config.lua'
        CLIENT {
            peers = {
                {
                    host = { '127.0.0.1', '8331' },
                },
            },
        }
    ]];

    do Init;

    async do end
    loop i in 8 do
        [=[
            APP.messages = {}
            MESSAGE {
                id = '1.0',
                chain = {
                    key   = '',
                    zeros = 0,
                },
                payload = '0.'..@(i+1)
            }
        ]=];
        do ClientMessages;
    end
    await FOREVER;
with

///////////////////////////////////////////////////////////////////////////////
// 1
///////////////////////////////////////////////////////////////////////////////

    var App _;
    [[
        dofile 'cfg/config.lua'
        SERVER {
            host = { '127.0.0.1', '8331' },
        }
    ]];

    do Init;

    var char[] ip      = [[ APP.server.host[1] ]];
    var int    port    = [[ APP.server.host[2] ]];
    var int    backlog = [[ APP.server.backlog ]];
    _dbg(0, "server | listening in %s:%d", (_char&&)&&ip, port);
    var UV_TCP_Server _ = UV_TCP_Server.build(&ip, port, backlog);

    await 5s;
    [[
        CHAIN1 = GG.chain_flatten('||0|')
        print'===> SERVER'
        print('>'..string.rep('=',78))
        print(GG.chain_tostring('||0|'))
        print('<'..string.rep('=',78))
    ]];
with

///////////////////////////////////////////////////////////////////////////////
// 2
///////////////////////////////////////////////////////////////////////////////

    var App _;
    [[
        dofile 'cfg/config.lua'
        CLIENT {
            peers = {
                {
                    host = { '127.0.0.1', '8331' },
                },
            },
        }
    ]];

    do Init;
    await 2s;

    loop i in 9 do
        [=[
            MESSAGE {
                id = '1.0',
                chain = {
                    key   = '',
                    zeros = 0,
                },
                payload = '2.'..@(i+1)
            }
        ]=];
    end
    do ClientMessages;
    await FOREVER;
end

[=[
    assert( #CHAIN1==3 and
            CHAIN1[2].txs[9]==[[2.9]] and
            CHAIN1[3].txs[8]==[[0.8]])
    print'OK!'
]=];

escape 0;
