#define DETERMINISTIC
#include "common.ceu"

///////////////////////////////////////////////////////////////////////////////
// 0->1->2
///////////////////////////////////////////////////////////////////////////////

var[] byte chain0;
var[] byte chain1;
var[] byte chain2;

var int chain0_len = _;
var int chain1_len = _;
var int chain2_len = _;

event none ok;

par/and do

///////////////////////////////////////////////////////////////////////////////
// 0
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            FC = require 'freechains'
            CFG = {
                no_persistency = true,
                chains = {
                    [''] = {
                        key   = '',
                        zeros = 0,
                        peers = {
                            {
                                address = '127.0.0.1',
                                port    = '8341'
                            },
                        },
                    },
                },
            }
        ]];

        var& Init init = spawn Init();
        await 100ms;

        [[
            ARGS = {
                message = {
                    version = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '1.1',
                }
            }
        ]]
        await Client_10(&init.shared);

        [[
            ARGS = {
                message = {
                    version = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '1.2',
                }
            }
        ]]
        await Client_10(&init.shared);

        [[
            ARGS = {
                message = {
                    version = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    remove = next(FC.chains[''][0].head),
                }
            }
        ]]
        await Client_10(&init.shared);
        emit ok;

        [[
            FC.dot( FC.chains[''][0].head, '/tmp/tst-ao-00.dot' )
        ]];
    end
with

///////////////////////////////////////////////////////////////////////////////
// 1
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            FC = require 'freechains'
            CFG = {
                daemon = {
                    address = '127.0.0.1',
                    port    = '8341'
                },
                no_persistency = true,
                chains = {
                    [''] = {
                        key   = '',
                        zeros = 0,
                        peers = {
                            {
                                address = '127.0.0.1',
                                port    = '8342'
                            },
                        },
                    },
                },
            }
        ]];

        var& Init init = spawn Init();
        //AWAIT_CHAIN_N(init.shared, '', 0, 2);
        await ok;

        [[
            ARGS = {
                message = {
                    version = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '2.1',
                }
            }
        ]]
        await Client_10(&init.shared);

        [[
            ARGS = {
                message = {
                    version = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '2.2',
                }
            }
        ]]
        await Client_10(&init.shared);

        [[
            FC.dot( FC.chains[''][0].head, '/tmp/tst-ao-01.dot' )
        ]];
    end
with

///////////////////////////////////////////////////////////////////////////////
// 2
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            FC = require 'freechains'
            CFG = {
                daemon = {
                    address = '127.0.0.1',
                    port    = '8342',
                    backlog = 128,
                },
                no_persistency = true,
                chains = {
                    [''] = {
                        key   = '',
                        zeros = 0,
                    },
                },
            }
        ]];

        var& Init init = spawn Init();
        AWAIT_CHAIN_N(init.shared, '', 0, 6);
        [[
            FC.dot( FC.chains[''][0].head, '/tmp/tst-ao-02.dot' )
        ]];
    end
end

[[
    assert(@chain0_len==4 and @chain1_len==6 and @chain2_len==6)
    assert(@chain1 == @chain2)
    print'OK!'
]]

escape 0;
