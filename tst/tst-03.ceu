#include "common.ceu"

///////////////////////////////////////////////////////////////////////////////
// 0->1->2->0
///////////////////////////////////////////////////////////////////////////////

var[] byte chain0;
var[] byte chain1;
var[] byte chain2;

var int chain0_len = _;
var int chain1_len = _;
var int chain2_len = _;

event none ok;

par/and do

///////////////////////////////////////////////////////////////////////////////
// 0
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            dofile 'src/common.lua'
            CFG = {
                daemon = {
                    address = '127.0.0.1',
                    port    = '8340',
                    backlog = 128,
                },
                not_persistency = true,
                chains = {
                    [''] = {
                        key   = '',
                        zeros = 0,
                        peers = {
                            {
                                address = '127.0.0.1',
                                port    = '8341'
                            },
                        },
                    },
                },
            }
        ]];

        var& Init init = spawn Init();
        await 100ms;

        [[
            ARGS = {
                message = {
                    version = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '0.1',
                }
            }
        ]]
        await Client(&init.shared);

        [[
            ARGS = {
                message = {
                    version = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '0.2',
                }
            }
        ]]
        await Client(&init.shared);

        AWAIT_CHAIN_LENGTH(init.shared, '', 0, 4);

        [[
            chain0 = FC.chain_flatten('||0|')
            print'===> 0'
            print('>'..string.rep('=',78))
            print(tostring2(chain0))
            print('<'..string.rep('=',78))
        ]];
        chain0 = []..[[tostring2(chain0)]];
        chain0_len = [[#chain0]];

        emit ok;
    end

with

///////////////////////////////////////////////////////////////////////////////
// 1
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            dofile 'src/common.lua'
            CFG = {
                daemon = {
                    address = '127.0.0.1',
                    port    = '8341'
                },
                not_persistency = true,
                chains = {
                    [''] = {
                        key   = '',
                        zeros = 0,
                        peers = {
                            {
                                address = '127.0.0.1',
                                port    = '8342'
                            },
                        },
                    },
                },
            }
        ]];

        var& Init init = spawn Init();
        AWAIT_CHAIN_LENGTH(init.shared, '', 0, 2);

        [[
            ARGS = {
                message = {
                    version = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '1.1',
                }
            }
        ]]
        await Client(&init.shared);

        [[
            ARGS = {
                message = {
                    version = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '1.2',
                }
            }
        ]]
        await Client(&init.shared);

        AWAIT_CHAIN_LENGTH(init.shared, '', 0, 4);
        [[
            chain1 = FC.chain_flatten('||0|')
            print'===> 1'
            print('>'..string.rep('=',78))
            print(tostring2(chain1))
            print('<'..string.rep('=',78))
        ]];
        chain1 = []..[[tostring2(chain1)]];
        chain1_len = [[#chain1]];

        emit ok;
    end

with

///////////////////////////////////////////////////////////////////////////////
// 2
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            dofile 'src/common.lua'
            CFG = {
                daemon = {
                    address = '127.0.0.1',
                    port    = '8342',
                    backlog = 128,
                },
                not_persistency = true,
                chains = {
                    [''] = {
                        key   = '',
                        zeros = 0,
                        peers = {
                            {
                                address = '127.0.0.1',
                                port    = '8340'
                            },
                        },
                    },
                },
            }
        ]];

        var& Init init = spawn Init();
        par/and do
            AWAIT_CHAIN_LENGTH(init.shared, '', 0, 4);

            [[
                chain2 = FC.chain_flatten('||0|')
                print'===> 2'
                print('>'..string.rep('=',78))
                print(tostring2(chain2))
                print('<'..string.rep('=',78))
            ]];
            chain2 = []..[[tostring2(chain2)]];
            chain2_len = [[#chain2]];
            emit ok;
        with
            var int i;
            loop i in [1 -> 3] do
                await ok;
            end
        end
    end

end

[[
    assert(@chain0_len==5 and @chain1_len==5 and @chain2_len==5)
    assert(@chain0 == @chain1)
    assert(@chain1 == @chain2)
    print'OK!'
]]

escape 0;
