#include "common.ceu"

///////////////////////////////////////////////////////////////////////////////
// 0->1->2->0
///////////////////////////////////////////////////////////////////////////////

event none ok;

par/and do

///////////////////////////////////////////////////////////////////////////////
// 0
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            dofile 'src/common.lua'
            CFG = {
                daemon = {
                    address = '127.0.0.1',
                    port    = '8340',
                    backlog = 128,
                },
                no_persistency = true,
                chains = {
                    [''] = {
                        key   = '',
                        zeros = 0,
                        peers = {
                            {
                                address = '127.0.0.1',
                                port    = '8341'
                            },
                        },
                    },
                },
            }
        ]];

        var& Init init = spawn Init();
        await 100ms;

        [[
            ARGS = {
                message = {
                    version = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '0.1',
                }
            }
        ]]
        await Client(&init.shared);

        [[
            ARGS = {
                message = {
                    version = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '0.2',
                }
            }
        ]]
        await Client(&init.shared);

        AWAIT_CHAIN_N(init.shared, '', 0, 5);

        [[
            FC.dot( FC.chains[''][0].head, '/tmp/tst-03-00.dot' )
        ]];

        emit ok;
    end

with

///////////////////////////////////////////////////////////////////////////////
// 1
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            dofile 'src/common.lua'
            CFG = {
                daemon = {
                    address = '127.0.0.1',
                    port    = '8341'
                },
                no_persistency = true,
                chains = {
                    [''] = {
                        key   = '',
                        zeros = 0,
                        peers = {
                            {
                                address = '127.0.0.1',
                                port    = '8342'
                            },
                        },
                    },
                },
            }
        ]];

        var& Init init = spawn Init();
        AWAIT_CHAIN_N(init.shared, '', 0, 3);

        [[
            ARGS = {
                message = {
                    version = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '1.1',
                }
            }
        ]]
        await Client(&init.shared);

        [[
            ARGS = {
                message = {
                    version = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '1.2',
                }
            }
        ]]
        await Client(&init.shared);

        AWAIT_CHAIN_N(init.shared, '', 0, 5);

        [[
            FC.dot( FC.chains[''][0].head, '/tmp/tst-03-01.dot' )
        ]];

        emit ok;
    end

with

///////////////////////////////////////////////////////////////////////////////
// 2
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            dofile 'src/common.lua'
            CFG = {
                daemon = {
                    address = '127.0.0.1',
                    port    = '8342',
                    backlog = 128,
                },
                no_persistency = true,
                chains = {
                    [''] = {
                        key   = '',
                        zeros = 0,
                        peers = {
                            {
                                address = '127.0.0.1',
                                port    = '8340'
                            },
                        },
                    },
                },
            }
        ]];

        var& Init init = spawn Init();
        par/and do
            AWAIT_CHAIN_N(init.shared, '', 0, 5);

            [[
                FC.dot( FC.chains[''][0].head, '/tmp/tst-03-02.dot' )
            ]];
            emit ok;
        with
            var int i;
            loop i in [1 -> 3] do
                await ok;
            end
        end
    end

end

[[
    local tst   = assert(io.open('tst/dots/tst-03.dot')):read'*a'
    local tmp00 = assert(io.open('/tmp/tst-03-00.dot')):read'*a'
    local tmp01 = assert(io.open('/tmp/tst-03-01.dot')):read'*a'
    local tmp02 = assert(io.open('/tmp/tst-03-02.dot')):read'*a'
    assert(tst==tmp00 and tst==tmp01 and tst==tmp02)

    print'OK!'
]]

escape 0;
