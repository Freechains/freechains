#include "common.ceu"

///////////////////////////////////////////////////////////////////////////////
// 0->1
//  - zeros = 22
//  - error on nonce => MALICIOUS
///////////////////////////////////////////////////////////////////////////////

par/and do

///////////////////////////////////////////////////////////////////////////////
// 0
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            dofile 'src/common.lua'
            CFG = {
                not_persistency = true,
                chains = {
                    [''] = {
                        key   = '',
                        zeros = 0,
                        peers = {
                            { address='127.0.0.1', port=8341 },
                        },
                    },
                },
            }
        ]];

        var& Init init = spawn Init();
        await 100ms;

        par/and do
            [[
                ARGS = {
                    message = {
                        version = '1.0',
                        chain = {
                            key   = '',
                            zeros = 22,
                        },
                        payload = '22.1',
                    },
                }
            ]];
            await Client(&init.shared);
        with
            // inject error on nonce
            await UV_STREAM_CONNECT;
            [[
                FC.chains[''][22].head.nonce = FC.chains[''][22].head.nonce + 1
            ]]
        end

        [[
            CHAIN0 = FC.chain_flatten('||22|')
            print'===> CLIENT'
            print('>'..string.rep('=',78))
            print(FC.chain_tostring('||22|'))
            print('<'..string.rep('=',78))
        ]];
    end

with

///////////////////////////////////////////////////////////////////////////////
// 1
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            dofile 'src/common.lua'
            CFG = {
                daemon = {
                    address = '127.0.0.1',
                    port    = '8341',
                    backlog = 128,
                },
                not_persistency = true,
                chains = {
                    [''] = {
                        key   = '',
                        zeros = 22,
                    },
                },
            }
        ]];

        var& Init init = spawn Init();
        await init.shared.err_server;
        [[
            CHAIN1 = FC.chain_flatten('||22|')
            print'===> SERVER-1'
            print('>'..string.rep('=',78))
            print(FC.chain_tostring('||22|'))
            print('<'..string.rep('=',78))
            assert(#FC.errs==2 and FC.errs[2]==FC['Exception.Freechains.Malformed'], #FC.errs)
        ]];
        [[
            assert(#CHAIN1==1)
            print'OK!'
        ]];
    end

end

escape 0;
