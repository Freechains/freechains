#include "common.ceu"

///////////////////////////////////////////////////////////////////////////////
// 0->1
//  - zeros = 22
//  - error on nonce => MALICIOUS
///////////////////////////////////////////////////////////////////////////////

par/and do

///////////////////////////////////////////////////////////////////////////////
// 0
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        var UV_TCP_Server_Data shared = _;
        [=[
            dofile 'src/common.lua'
            dofile 'cfg/config.lua'

            CLIENT {
                peers = {
                    {
                        host = { '127.0.0.1', '8331' },
                    },
                },
            }
        ]=];

        [=[
            MESSAGE {
                id = '1.0',
                chain = {
                    key   = '',
                    zeros = 22,
                },
                payload = [[22.1]],
            }
        ]=];

        await Init();

        par/and do
            await ClientMessages(&shared);
        with
            // inject error on nonce
            await UV_STREAM_CONNECT;
            [[
                head_hash = APP.chains['||22|'].head_hash
                tx_hash = APP.blocks[head_hash].txs[1]
                tx = APP.txs[tx_hash]
                print('>>>')
                print('\n'..tostring2(tx_hash,true))
                print('\n'..tostring2(tx.nonce,true))
                n1,n2 = string.sub(tx.nonce,1,15), string.sub(tx.nonce,16,16)
                tx.nonce = n1..string.char(string.byte(n2)+1)
                print('\n'..tostring2(tx.nonce,true))
            ]]
        end

        [[
            CHAIN0 = GG.chain_flatten('||22|')
            print'===> CLIENT'
            print('>'..string.rep('=',78))
            print(GG.chain_tostring('||22|'))
            print('<'..string.rep('=',78))
        ]];
    end

with

///////////////////////////////////////////////////////////////////////////////
// 1
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        var UV_TCP_Server_Data shared = _;
        [[
            dofile 'src/common.lua'
            dofile 'cfg/config.lua'

            CHAINS {
                {
                    key   = '',
                    zeros = 22,
                },
            }

            SERVER {
                host = { '127.0.0.1', '8331' },
            }
        ]];

        await Init();

        vector[] byte ip      = [] .. [[ APP.server.host[1] ]];
        var      int  port    = [[ APP.server.host[2] ]];
        var      int  backlog = [[ APP.server.backlog ]];
        _dbg(0, "server | listening in %s:%d", &&ip[0], port);
        spawn UV_TCP_Server(&shared, &&ip[0], port, backlog);

        await shared.ok;
        [[
            CHAIN1 = GG.chain_flatten('||22|')
            print'===> SERVER-1'
            print('>'..string.rep('=',78))
            print(GG.chain_tostring('||22|'))
            print('<'..string.rep('=',78))
            assert(#APP.errs==1 and APP.errs[1]==GG.ERR_REMOTE_BUG_OR_MALICIOUS)
        ]];
        [[
            assert(#CHAIN1==1)
            print'OK!'
        ]];
    end

end

escape 0;
