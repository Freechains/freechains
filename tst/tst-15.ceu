#include "common.ceu"

///////////////////////////////////////////////////////////////////////////////
// 0->1
//  - close the connection during last message
//      - 0.3 is not received
///////////////////////////////////////////////////////////////////////////////

par/and do

///////////////////////////////////////////////////////////////////////////////
// 0
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            dofile 'src/common.lua'
            CFG = {
                no_persistency = true,
                zeros_raise = TODO,     -- global and per-chain
                chains = {
                    [''] = {
                        key   = '',
                        zeros = 0,
                        peers = {
                            { address='127.0.0.1', port=8341 },
                        },
                    },
                },
            }
        ]];

        var& Init init = spawn Init();
        await 100ms;

        var int i;
        loop i in [1 -> 3] do
            [[
                ARGS = {
                    message = {
                        version = '1.0',
                        chain = {
                            key   = '',
                            zeros = 0,
                        },
                        payload = '0.'..@i
                    }
                }
            ]];
            var&? Client c = spawn Client(&init.shared);
            if i == 3 then
                await UV_STREAM_CONNECT;
                kill c;
            end
            await c;
        end

        [[
            FC.dot( FC.chains[''][0].head, '/tmp/tst-15-00.dot' )
        ]];
    end

with

///////////////////////////////////////////////////////////////////////////////
// 1
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            dofile 'src/common.lua'
            CFG = {
                daemon = {
                    address = '127.0.0.1',
                    port    = '8341',
                    backlog = 128,
                },
                no_persistency = true,
                chains = {
                    [''] = {
                        key   = '',
                        zeros = 0,
                    },
                },
            }
        ]];

        var& Init init = spawn Init();
        AWAIT_CHAIN_N(init.shared, '', 0, 3);
        [[
            FC.dot( FC.chains[''][0].head, '/tmp/tst-15-01.dot' )
        ]];
    end

end


escape 0;
