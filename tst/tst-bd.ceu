#include "common.ceu"

///////////////////////////////////////////////////////////////////////////////
// 0->1 (starting in sequence)
///////////////////////////////////////////////////////////////////////////////

event none ok;

par/and do

///////////////////////////////////////////////////////////////////////////////
// 0
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        [[
            FC = require 'freechains'

            CFG = {
                daemon = {
                    address = '127.0.0.1',
                    port    = '8340'
                },
                no_persistency = true,
                chains = {
                },
            }
        ]];
        var& Init init = spawn Init();
        await init.ok;
        emit ok;
        await ok;
        [[
            CFG.chains['tst-25'] = {
                key   = 'tst-25',
                zeros = 0,
                peers = {
                    {
                        address = '127.0.0.1',
                        port    = '8341'
                    },
                },
            }
        ]]
        spawn Subscribe(&init.shared);
        AWAIT_CHAIN_N(init.shared,"tst-25",0,5);
        emit ok;
        [[
            FC.dot( FC.chains[''][0].head, '/tmp/tst-bd-00.dot' )
        ]];
    end

with

///////////////////////////////////////////////////////////////////////////////
// 1
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        await ok;
        [[
            FC = require 'freechains'

            CFG = {
                daemon = {
                    address = '127.0.0.1',
                    port    = '8341'
                },
                chains = {
                    zeros_raise = TODO,     -- global and per-chain
                    ['tst-25'] = {
                        key   = 'tst-25',
                        zeros = 0,
                        peers = {
                            {
                                address = '127.0.0.1',
                                port    = '8340'
                            },
                        },
                    },
                },
            }
        ]];
        [[ os.execute('cp tst/\\|tst-25\\|0\\|.chain /tmp/freechains/8341/') ]]
        var& Init init = spawn Init();
        AWAIT_CHAIN_N(init.shared,"tst-25",0,5);

        [[
            FC.dot( FC.chains[''][0].head, '/tmp/tst-bd-01.dot' )
        ]];
        par/and do
            emit ok;
        with
            await ok;
        end
    end

end

[[
    local tst   = assert(io.open('tst/dots/tst-bd.dot')):read'*a'
    local tmp00 = assert(io.open('/tmp/tst-bd-00.dot')):read'*a'
    local tmp01 = assert(io.open('/tmp/tst-bd-01.dot')):read'*a'
    assert(tst==tmp00 and tst==tmp01)

    print'OK!'
]]

escape 0;
