#include "common.ceu"

///////////////////////////////////////////////////////////////////////////////
// 0->1,2,3,4
//  - "1" ok
//  - "2" is not in "0" peers
//  - "3" does not receive '||0|' from "0"
//  - "4" is not sub'ed to '||0|'
///////////////////////////////////////////////////////////////////////////////

par/and do

///////////////////////////////////////////////////////////////////////////////
// 0
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        var UV_TCP_Server_Data shared = _;
        [=[
            dofile 'src/common.lua'
            dofile 'cfg/config.lua'

            CLIENT {
                peers = {
                    {
                        host = { '127.0.0.1', '8331' },
                    },
                    --{
                        --host = { '127.0.0.1', '8332' },
                    --},
                    {
                        host = { '127.0.0.1', '8333' },
                        chains = {},    -- 3 does not receive '||0|'
                    },
                    {
                        host = { '127.0.0.1', '8334' },
                    },
                },
            }

            MESSAGE {
                id = '1.0',
                chain = {
                    key   = '',
                    zeros = 0,
                },
                payload = [[
Ola Mundo!
]],
            }
        ]=];

        await Init();
        await 100ms;
        await ClientMessages(&shared);
        [[
            CHAIN0 = GG.chain_flatten('||0|')
            print'===> CLIENT'
            print('>'..string.rep('=',78))
            print(GG.chain_tostring('||0|'))
            print('<'..string.rep('=',78))
        ]];
    end

with

///////////////////////////////////////////////////////////////////////////////
// 1
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        var UV_TCP_Server_Data shared = _;
        [[
            dofile 'src/common.lua'
            dofile 'cfg/config.lua'
            SERVER {
                host = { '127.0.0.1', '8331' },
            }
        ]];

        await Init();

        var[] byte ip      = [] .. [[ APP.server.host[1] ]] .. [0];
        var   int  port    = [[ APP.server.host[2] ]];
        var   int  backlog = [[ APP.server.backlog ]];
        _dbg(0, "server | listening in %s:%d", &&ip[0], port);
        spawn UV_TCP_Server(&&ip[0], port, backlog, _, &shared);

        await shared.ok;
        [[
            CHAIN1 = GG.chain_flatten('||0|')
            print'===> SERVER'
            print('>'..string.rep('=',78))
            print(GG.chain_tostring('||0|'))
            print('<'..string.rep('=',78))
        ]];
        [[
            assert(#CHAIN1 == 2)
            print'OK 1/4!'
        ]]
    end

with

///////////////////////////////////////////////////////////////////////////////
// 2
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        var UV_TCP_Server_Data shared = _;
        [[
            dofile 'src/common.lua'
            dofile 'cfg/config.lua'
            SERVER {
                host = { '127.0.0.1', '8332' },
            }
        ]];

        await Init();

        var[] byte ip      = [] .. [[ APP.server.host[1] ]] .. [0];
        var   int  port    = [[ APP.server.host[2] ]];
        var   int  backlog = [[ APP.server.backlog ]];
        _dbg(0, "server | listening in %s:%d", &&ip[0], port);
        spawn UV_TCP_Server(&&ip[0], port, backlog, _, &shared);

        await 500ms;
        [[
            CHAIN2 = GG.chain_flatten('||0|')
            print'===> SERVER'
            print('>'..string.rep('=',78))
            print(GG.chain_tostring('||0|'))
            print('<'..string.rep('=',78))
        ]];
        [[
            assert(#CHAIN2 == 1)
            print'OK 2/4!'
        ]]
    end

with

///////////////////////////////////////////////////////////////////////////////
// 3
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        var UV_TCP_Server_Data shared = _;
        [[
            dofile 'src/common.lua'
            dofile 'cfg/config.lua'
            SERVER {
                host = { '127.0.0.1', '8333' },
            }
        ]];

        await Init();

        var[] byte ip      = [] .. [[ APP.server.host[1] ]] .. [0];
        var   int  port    = [[ APP.server.host[2] ]];
        var   int  backlog = [[ APP.server.backlog ]];
        _dbg(0, "server | listening in %s:%d", &&ip[0], port);
        spawn UV_TCP_Server(&&ip[0], port, backlog, _, &shared);

        await 500ms;
        [[
            CHAIN3 = GG.chain_flatten('||0|')
            print'===> SERVER'
            print('>'..string.rep('=',78))
            print(GG.chain_tostring('||0|'))
            print('<'..string.rep('=',78))
        ]];
        [[
            assert(#CHAIN3 == 1)
            print'OK 3/4!'
        ]]
    end

with

///////////////////////////////////////////////////////////////////////////////
// 4
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        var UV_TCP_Server_Data shared = _;
        [[
            dofile 'src/common.lua'
            dofile 'cfg/config.lua'
            CHAINS {
                -- not sub'ed
            }
            SERVER {
                host = { '127.0.0.1', '8334' },
            }
        ]];

        await Init();

        var[] byte ip      = [] .. [[ APP.server.host[1] ]] .. [0];
        var   int  port    = [[ APP.server.host[2] ]];
        var   int  backlog = [[ APP.server.backlog ]];
        _dbg(0, "server | listening in %s:%d", &&ip[0], port);
        spawn UV_TCP_Server(&&ip[0], port, backlog, _, &shared);

        await shared.ok;
        [[
            assert(not APP.chains['||0|'])
            assert(#APP.errs==1 and APP.errs[1]==GG.MESSAGE10_NOTSUB)
        ]];
        [[
            assert(CHAIN4 == nil)
            print'OK 4/4!'
        ]]
    end

end

escape 0;
