#include "common.ceu"

///////////////////////////////////////////////////////////////////////////////
// Write to "x.chain"
//  - 111,222
//  - 333,444
///////////////////////////////////////////////////////////////////////////////

var UV_TCP_Server_Data shared = _;

[=[
    dofile 'src/common.lua'
    dofile 'cfg/config.lua'

    CHAINS {
        files = 'tst/files/',
        {
            key   = '',     -- global chain (cannot be signed)
            zeros = 0,      -- receive messages with 0 leading zeros in the hash
            id    = nil,    -- concat of key..zeros
            head  = nil,
            -- TODO: mode 'pub,sub,pub/sub'
        },
    }
    CLIENT {
        peers = {
            {
                host = { '127.0.0.1', '8331' },
            },
        },
    }
]=];

await Init();

[=[
    MESSAGE {
        version = '1.0',
        chain = {
            key   = '',
            zeros = 0,
        },
        payload = [[111]],
    }

    MESSAGE {
        version = '1.0',
        chain = {
            key   = '',
            zeros = 0,
        },
        payload = [[222]],
    }
]=];

await ClientMessages(&shared);

[=[
    MESSAGE {
        version = '1.0',
        chain = {
            key   = '',
            zeros = 0,
        },
        payload = [[333]],
    }

    MESSAGE {
        version = '1.0',
        chain = {
            key   = '',
            zeros = 0,
        },
        payload = [[444]],
    }
]=];
await ClientMessages(&shared);

[[
    print('>'..string.rep('=',78))
    print(GG.chain_tostring('||0|'))
    print('<'..string.rep('=',78))
]];

var[] byte path = [].."x.chain";
[[ ARGS={ chain=APP.chains['||0|'] } ]];
await FS_write_10(&path);

[[
local src   = io.open('src/x.chain'):read'*a'
local build = io.open('x.chain'):read'*a'
assert(src == build)
print 'OK!'
]];

escape 0;
