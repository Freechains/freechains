#include "common.ceu"

///////////////////////////////////////////////////////////////////////////////
// Read from "x.chain"
//  - 111,222
//  - 333,444
///////////////////////////////////////////////////////////////////////////////

var App _;
[=[
    dofile 'cfg/config.lua'

    CLIENT {
        peers = {
            {
                host = { '127.0.0.1', '8331' },
            },
        },
    }
]=];
do Init;

var char[] path = [].."x.chain";
var int ret = do FS_read_10.run(&path);
_assert(ret == _ERR_NONE);
[[
    head1 = APP.blocks[ARGS.head_hash]

    old = APP.chains['||0|'].head_hash
    APP.chains['||0|'].head_hash = ARGS.head_hash
    print('>'..string.rep('=',78))
    print(GG.chain_tostring('||0|'))
    print('<'..string.rep('=',78))
    APP.chains['||0|'].head_hash = old
]];

[=[
    MESSAGE {
        id = '1.0',
        chain = {
            key   = '',
            zeros = 0,
        },
        payload = [[111]],
    }

    MESSAGE {
        id = '1.0',
        chain = {
            key   = '',
            zeros = 0,
        },
        payload = [[222]],
    }
]=];
do ClientMessages;

[=[
    MESSAGE {
        id = '1.0',
        chain = {
            key   = '',
            zeros = 0,
        },
        payload = [[333]],
    }

    MESSAGE {
        id = '1.0',
        chain = {
            key   = '',
            zeros = 0,
        },
        payload = [[444]],
    }
]=];
do ClientMessages;

[[
    print('>'..string.rep('=',78))
    print(GG.chain_tostring('||0|'))
    print('<'..string.rep('=',78))
]];

[[
    chain     = APP.chains['||0|']
    head_hash = chain.head_hash
    base      = GG.chain_head_base_size(head_hash).base
]];

[[
head2 = APP.blocks[head_hash]
while head1 do
    assert(head2)

    assert(#head1.txs == #head2.txs)
    for i=1, #head1.txs do
        local tx1 = APP.txs[ head1.txs[i] ]
        local tx2 = APP.txs[ head2.txs[i] ]
        assert(tx1.nonce     == tx2.nonce)
        assert(tx1.back_hash == tx2.back_hash)
        assert(tx1.payload   == tx2.payload)
    end

    head1 = head1.tail
    head2 = APP.blocks[head2.tail_hash]
end
]];

escape 0;
