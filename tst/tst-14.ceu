#include "common.ceu"

///////////////////////////////////////////////////////////////////////////////
// 0->1<-2
//  - 0 sends 0.1
//  - 0 sends 0.2
//  - ...     0.9
//  - 2 sends 2.1,2.2,...,2.8
//  - (2.1,...,2.8) -> 0.1 -> ... -> 0.9 -> ''
///////////////////////////////////////////////////////////////////////////////

input void ANY;

par/or do

///////////////////////////////////////////////////////////////////////////////
// 0
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        var UV_TCP_Server_Data shared = _;
        spawn App(&shared);
        [[
            dofile 'cfg/config.lua'
            CLIENT {
                peers = {
                    {
                        host = { '127.0.0.1', '8331' },
                    },
                },
            }
        ]];

        await Init();

        var int i;
        loop i in [1 -> 9] do
            [=[
                APP.messages = {}
                MESSAGE {
                    id = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '0.'..@i
                }
            ]=];
            await ClientMessages(&shared);
        end
        await FOREVER;
    end

with

///////////////////////////////////////////////////////////////////////////////
// 1
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        var UV_TCP_Server_Data shared = _;
        spawn App(&shared);
        [[
            dofile 'cfg/config.lua'
            SERVER {
                host = { '127.0.0.1', '8331' },
            }
        ]];

        await Init();

        vector[] byte ip      = [] .. [[ APP.server.host[1] ]];
        var      int  port    = [[ APP.server.host[2] ]];
        var      int  backlog = [[ APP.server.backlog ]];
        _dbg(0, "server | listening in %s:%d", &&ip[0], port);
        spawn UV_TCP_Server(&shared, &&ip[0], port, backlog);

        await 5s;
        [[
            CHAIN1 = GG.chain_flatten('||0|')
            print'===> SERVER'
            print('>'..string.rep('=',78))
            print(GG.chain_tostring('||0|'))
            print('<'..string.rep('=',78))
        ]];
        [=[
            assert( #CHAIN1==11 and
                    CHAIN1[10].txs[1]==[[0.9]] and
                    CHAIN1[11].txs[8]==[[2.8]])
            print'OK!'
        ]=];
    end

with

///////////////////////////////////////////////////////////////////////////////
// 2
///////////////////////////////////////////////////////////////////////////////

    lua[] do
        var UV_TCP_Server_Data shared = _;
        spawn App(&shared);
        [[
            dofile 'cfg/config.lua'
            CLIENT {
                peers = {
                    {
                        host = { '127.0.0.1', '8331' },
                    },
                },
            }
        ]];

        await Init();
        await 2s;

        var int i;
        loop i in [1 -> 8] do
            [=[
                MESSAGE {
                    id = '1.0',
                    chain = {
                        key   = '',
                        zeros = 0,
                    },
                    payload = '2.'..@i
                }
            ]=];
        end
        await ClientMessages(&shared);
        await FOREVER;
    end

end

escape 0;
