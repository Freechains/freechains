///////////////////////////////////////////////////////////////////////////////
// Read/Write/Compare "x.chain" => "y.chain"
//  - 111,222
//  - 333,444
///////////////////////////////////////////////////////////////////////////////

#include "common.ceu"

[[
    dofile 'src/common.lua'
    CFG = {
        chains = {
            zeros_raise = TODO,     -- global and per-chain
            [1] = {
                key   = '',
                zeros = 0,
            },
        },
    }
]];

await Init();

var[] byte src = [].."x.chain";
var[] byte dst = [].."y.chain";

await FS_read_10(&src);
await FS_write_10(&dst);

[[
local src = io.open(@src):read'*a'
local dst = io.open(@dst):read'*a'
assert(src == dst)
]];

// error r/w
do
    var[] byte err = [].."/no.chain";

    do
        var Exception.Uv? e;
        catch e do
            await FS_read_10(&err);
        end
        _fprintf(_stderr, "[%d] uv-error: %s\n", e!.number, e!.message);
        _ceu_sys_assert(e!.number == -_ENOENT, "bug");
    end
    do
        var Exception.Uv? e;
        catch e do
            await FS_write_10(&err);
        end
        _fprintf(_stderr, "[%d] uv-error: %s\n", e!.number, e!.message);
        _ceu_sys_assert(e!.number == -_EACCES, "bug");
    end
end

[[ print'OK!' ]];

escape 0;
